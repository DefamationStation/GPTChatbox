name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller  # Ensuring PyInstaller is installed

      - name: Build the executable
        run: |
          pyinstaller --onefile --windowed --icon=retrochat.ico retrochat.py
        shell: bash

      - name: Create output directory
        run: mkdir output

      - name: Move executable to output
        run: |
          mv dist/retrochat.exe output/  # Ensure this path matches the actual output of PyInstaller
          cp retrochat.py output/  # Optionally copy the source file for reference

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/retrochat.exe
          asset_name: retrochat.exe
          asset_content_type: application/octet-stream

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
